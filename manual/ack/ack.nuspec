<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>ack</id>
    <version>2.999.03-beta</version>
    <packageSourceUrl>https://github.com/tylerszabo/chocolatey-packages</packageSourceUrl>
    <owners>Tyler Szabo</owners>

    <title>Ack!</title>
    <authors>Andy Lester</authors>
    <projectUrl>https://beyondgrep.com/</projectUrl>
    <iconUrl>https://cdn.rawgit.com/tylerszabo/chocolatey-packages/5509c08b61c2272b7230370fe1801b78922786aa/ack/Ack.png</iconUrl>
    <copyright>Copyright 2005-2018 Andy Lester</copyright>
    <licenseUrl>https://github.com/beyondgrep/ack3/blob/2.999_03/LICENSE.md</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/beyondgrep/ack3</projectSourceUrl>
    <docsUrl>https://beyondgrep.com/documentation/</docsUrl>
    <mailingListUrl>https://beyondgrep.com/community/</mailingListUrl>
    <bugTrackerUrl>https://github.com/beyondgrep/ack3/issues</bugTrackerUrl>
    <tags>ack grep perl beyondgrep</tags>
    <summary>ack is a code-searching tool, similar to grep but optimized for programmers searching large trees of source code. It runs in pure Perl, is highly portable, and runs on any platform that runs Perl.</summary>
    <description>#ack is a tool like grep, optimized for programmers

Designed for programmers with large heterogeneous trees of source code, ack is written purely in portable Perl 5 and takes advantage of the power of Perl's regular expressions.
    </description>
    <releaseNotes><![CDATA[Below are the changes in ack 3 beta (2.999_03). Find the full changelist [here](https://github.com/beyondgrep/ack3/blob/2.999_03/Changes).

2.999_03 Fri Jan 19 11:02:46 CST 2018
=====================================
[ENHANCEMENTS]
The check for whether we need to scan the entire file line-by-line now
reads 10M of file instead of just 100K.

Removed support for the ACK_OPTIONS environment variable.  Use an ackrc
file instead.  If you have ACK_OPTIONS set, ack will give a warning.

Lots of internal speedups.


2.999_02 Mon Jan  8 23:03:42 CST 2018
=====================================
[ENHANCEMENTS]
Added an optimization to make ack only do a line-by-line search of a
file if there's a match somewhere in the file.  This gives ack a 20-30%
in timings of common cases.


2.999_01 Mon Jan  1 22:11:17 CST 2018
=====================================
[ENHANCEMENTS]
Added --pod as a filetype, recognizing .pod as its extension.  This is
Perl's POD (Plain Old Documentation) format.

Added --markdown as a filetype, recognizing .md and .markdown as
extensions.

--pager is no longer allowed in a project .ackrc file.  --match and
--output are not allowed in any .ackrc file.

ack 3's new features are listed below for now.

[FIXES]
--lines had some mutex options that were not getting checked.  Now,
--lines is mutex with --passthru, --match and all context options.


=============================
# Release notes for ack 3.000
=============================

# New features

ack 3 is a greplike tool optimized for searching large code trees.

Improvements over ack 2 include:

* Improved `-w` option.

* `-w` option will warn if your pattern does not lend itself to
word matching.

* `-i`, `-I` and `--smart-case`

* `--proximate=N` option

* Added `--pod` and `--markdown`.

* Added `GNUmakefile` to the list of makefile specs.

* Added `-S` as a synonym for `--smart-case`.

# Bug fixes

* Column numbers were not getting colorized in the output.  Added
`--color-colno` option and `ACK_COLOR_COLNO` environment variable.

* A pattern that wanted whitespace at the end could match the
linefeed at the end of a line.  This is no longer possible.

# Incompatibilities with ack 2

## ack 3 requires Perl 5.10.1

ack 2 only needed Perl 5.8.8.  This shouldn't be a problem since 5.10.1
has been out since 2009.

## ack 3 no longer highlights capture groups.

ack 2 would highlight your capture groups.  For example,

    ack '(set|get)_foo_(name|id)'

would highlight the `set` or `get`, and the `name` or `id`, but not the
full `set_user_id` that was matched.

This feature was too confusing and has been removed.  Now, the entire
matching string is highlighted.

## ack 3's --output allows fewer special variables

In ack 2, you could put any kind of Perl code in the `--output`
option and it would get `eval`uated at run time, which would let
you do tricky stuff like this gem from Mark Fowler
(http://www.perladvent.org/2014/2014-12-21.html):

    ack --output='$&: @{[ eval "use LWP::Simple; 1" && length LWP::Simple::get($&) ]} bytes' \
                    'https?://\S+' list.txt
    http://google.com/: 19529 bytes
    http://metacpan.org/: 7560 bytes
    http://www.perladvent.org/: 5562 bytes

This has been a security problem in the past, and so in ack 3 we
no longer `eval` the contents of `--output`.  You're now restricted
to the following variables: `$1` thru `$9`, `$_`, `$.`, `$&`, ``$` ``,
`$'` and `$+`.  You can also embed `\t`, `\n` and `\r` ,
and `$f` as stand-in for `$filename` in `ack2 --output` .]]>
</releaseNotes>
    <dependencies>
      <dependency id="StrawberryPerl" version="[5.10.1, ]" />
    </dependencies>
  </metadata>

  <files>
    <file src="tools\**" target="tools" />
  </files>

</package>
